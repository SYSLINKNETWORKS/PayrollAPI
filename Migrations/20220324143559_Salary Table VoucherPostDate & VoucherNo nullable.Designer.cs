// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TWP_API_Payroll.App_Data;

#nullable disable

namespace TWP_API_Payroll.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220324143559_Salary Table VoucherPostDate & VoucherNo nullable")]
    partial class SalaryTableVoucherPostDateVoucherNonullable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TWP_API_Payroll.Models.Absent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<bool>("ApprovedAdjust")
                        .HasColumnType("bit");

                    b.Property<string>("ApprovedAdjustType")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserNameDelete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameInsert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("T_Absent");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.Advance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserNameDelete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameInsert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VoucherNo")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("T_Advance");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.Allowance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Fix")
                        .HasColumnType("bit");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserNameDelete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameInsert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cf_Allowance");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.AnnualLeaveAdjustment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("ApprovedAdjustType")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeaveAdjust")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserNameDelete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameInsert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("T_AnnualLeaveAdjustment");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.AnnualLeaves", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("AnnualLeaveAllow")
                        .HasColumnType("bit");

                    b.Property<int>("AnnualLeaveDays")
                        .HasColumnType("int");

                    b.Property<bool>("CasualLeaveAllow")
                        .HasColumnType("bit");

                    b.Property<int>("CasualLeaveDays")
                        .HasColumnType("int");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("SickLeaveAllow")
                        .HasColumnType("bit");

                    b.Property<int>("SickLeaveDays")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserNameDelete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameInsert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cf_AnnualLeaves");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.AttendanceMachine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("AttendanceMachineCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttendanceMachineGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ip")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserNameDelete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameInsert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AttendanceMachineCategoryId");

                    b.HasIndex("AttendanceMachineGroupId");

                    b.ToTable("Cf_AttendanceMachine");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.AttendanceMachineCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserNameDelete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameInsert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cf_AttendanceMachineCategory");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.AttendanceMachineGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserNameDelete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameInsert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cf_AttendanceMachineGroup");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.CheckAttendance", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(1);

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<Guid?>("AttendanceMachineIdInn")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AttendanceMachineIdOut")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Inn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Minutes")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Out")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserNameInsert")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId", "Date");

                    b.HasIndex("AttendanceMachineIdInn");

                    b.HasIndex("AttendanceMachineIdOut");

                    b.ToTable("T_CheckAttendance");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.CheckInOut", b =>
                {
                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CheckTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<Guid?>("AttendanceMachineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CheckType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("InOutCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Remarks")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("SensorId")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserNameDelete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameInsert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VerifyCode")
                        .HasColumnType("int");

                    b.HasKey("MachineId", "CheckTime");

                    b.HasIndex("AttendanceMachineId");

                    b.HasIndex("InOutCategoryId");

                    b.ToTable("T_CheckInOut");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.DailyDate", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HolidayCheck")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Date");

                    b.ToTable("Cf_DailyDate");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserNameDelete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameInsert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cf_Department");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.Designation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Director")
                        .HasColumnType("bit");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("Salesman")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserNameDelete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameInsert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cf_Designation");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressPermanent")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("AnnualLeavesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AttendanceAllowance")
                        .HasColumnType("bit");

                    b.Property<bool>("AttendanceExempt")
                        .HasColumnType("bit");

                    b.Property<Guid>("BranchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CNIC")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("CNICExpire")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyExpirence")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CompanyExpirenceDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CompanyExpirenceFrom")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyExpirenceRemarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CompanyExpirenceTo")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateofBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateofJoin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateofParmanent")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DesignationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("DocumentAuthorize")
                        .HasColumnType("bit");

                    b.Property<bool>("EOBI")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EOBIRegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EOBIRegistrationNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmergencyContactOne")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmergencyContactTwo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("EmployeeCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gratuity")
                        .HasColumnType("bit");

                    b.Property<bool>("IncomeTax")
                        .HasColumnType("bit");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LateDeduction")
                        .HasColumnType("bit");

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<string>("Married")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ModeOfPayment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NTN")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("OfficeWorker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OverTime")
                        .HasColumnType("bit");

                    b.Property<bool>("OverTimeFactory")
                        .HasColumnType("bit");

                    b.Property<bool>("OverTimeHoliday")
                        .HasColumnType("bit");

                    b.Property<double>("OverTimeRate")
                        .HasColumnType("float");

                    b.Property<bool>("OverTimeRateCheck")
                        .HasColumnType("bit");

                    b.Property<double>("OverTimeSpecialRate")
                        .HasColumnType("float");

                    b.Property<bool>("OvertimeSaturday")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ProvisionPeriod")
                        .HasColumnType("int");

                    b.Property<string>("Qualification")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("QualificationInstitute")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("QualificationRemarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("QualificationYear")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReferenceAddressOne")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ReferenceAddressTwo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ReferenceCNICOne")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("ReferenceCNICTwo")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("ReferenceContactOne")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReferenceContactTwo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReferenceOne")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ReferenceTwo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Remarks")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("ReportOfficerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ResignationCheck")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ResignationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResignationRemarks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("RosterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("SESSI")
                        .HasColumnType("bit");

                    b.Property<DateTime>("SESSIRegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SESSIRegistrationNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalaryAccount")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("StopPayment")
                        .HasColumnType("bit");

                    b.Property<double>("TakafulRate")
                        .HasColumnType("float");

                    b.Property<string>("TemporaryPermanent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserNameDelete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameInsert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AnnualLeavesId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("DesignationId");

                    b.HasIndex("EmployeeCategoryId");

                    b.HasIndex("RosterId");

                    b.ToTable("Cf_Employee");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.EmployeeAllowances", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AllowanceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AllowanceId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Cf_EmployeeAllowances");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.EmployeeCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("BonusAccountNo")
                        .HasColumnType("int");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EidAccountNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("SalaryAccountNo")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserNameDelete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameInsert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cf_EmployeeCategory");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.EmployeeImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageBytes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ImageProfileCheck")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Cf_EmployeeImage");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.Holiday", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FactoryOverTimeCheck")
                        .HasColumnType("bit");

                    b.Property<bool>("HolidayCheck")
                        .HasColumnType("bit");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserNameDelete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameInsert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("T_Holiday");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.IncomeTaxSlabEmployee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Percentage")
                        .HasColumnType("float");

                    b.Property<double>("SlabFrom")
                        .HasColumnType("float");

                    b.Property<double>("SlabTo")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserNameDelete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameInsert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cf_IncomeTaxSlabEmployee");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.InOutCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserNameDelete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameInsert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cf_InOutCategory");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.LoanCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserNameDelete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameInsert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cf_LoanCategory");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.LoanIssue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("InstalmentAmount")
                        .HasColumnType("float");

                    b.Property<Guid>("LoanCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("LoanStatus")
                        .HasColumnType("bit");

                    b.Property<double>("NoOfInstalment")
                        .HasColumnType("float");

                    b.Property<string>("Remarks")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserNameDelete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameInsert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VoucherNo")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LoanCategoryId");

                    b.ToTable("T_LoanIssue");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.LoanReceive", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("CheaqueCash")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LoanIssueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserNameDelete")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserNameInsert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoanIssueId");

                    b.ToTable("T_LoanReceive");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.Roster", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserNameDelete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameInsert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cf_Roster");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.RosterGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("EarlyGoing")
                        .HasColumnType("float");

                    b.Property<double>("EarlyOvertime")
                        .HasColumnType("float");

                    b.Property<int>("EveningWorkingHours")
                        .HasColumnType("int");

                    b.Property<bool>("FridayCheck")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FridayInn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FridayOut")
                        .HasColumnType("datetime2");

                    b.Property<int>("FridayWorkingHours")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Late")
                        .HasColumnType("float");

                    b.Property<bool>("MondayCheck")
                        .HasColumnType("bit");

                    b.Property<DateTime>("MondayInn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("MondayOut")
                        .HasColumnType("datetime2");

                    b.Property<int>("MondayWorkingHours")
                        .HasColumnType("int");

                    b.Property<int>("MorningWorkingHours")
                        .HasColumnType("int");

                    b.Property<double>("OverTime")
                        .HasColumnType("float");

                    b.Property<Guid>("RosterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("SaturdayCheck")
                        .HasColumnType("bit");

                    b.Property<DateTime>("SaturdayInn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SaturdayOut")
                        .HasColumnType("datetime2");

                    b.Property<int>("SaturdayWorkingHours")
                        .HasColumnType("int");

                    b.Property<bool>("SundayCheck")
                        .HasColumnType("bit");

                    b.Property<DateTime>("SundayInn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SundayOut")
                        .HasColumnType("datetime2");

                    b.Property<int>("SundayWorkingHours")
                        .HasColumnType("int");

                    b.Property<bool>("ThursdayCheck")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ThursdayInn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThursdayOut")
                        .HasColumnType("datetime2");

                    b.Property<int>("ThursdayWorkingHours")
                        .HasColumnType("int");

                    b.Property<bool>("TuesdayCheck")
                        .HasColumnType("bit");

                    b.Property<DateTime>("TuesdayInn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TuesdayOut")
                        .HasColumnType("datetime2");

                    b.Property<int>("TuesdayWorkingHours")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserNameDelete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameInsert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WednesdayCheck")
                        .HasColumnType("bit");

                    b.Property<DateTime>("WednesdayInn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("WednesdayOut")
                        .HasColumnType("datetime2");

                    b.Property<int>("WednesdayWorkingHours")
                        .HasColumnType("int");

                    b.Property<double>("WorkingHours")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("RosterId");

                    b.ToTable("Cf_RosterGroup");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.Salary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("CurrentAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("IncreamentAmount")
                        .HasColumnType("float");

                    b.Property<double>("IncreamentPercentage")
                        .HasColumnType("float");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("PreviousAmount")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserNameDelete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameInsert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("T_Salary");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.SalaryAdditionDeduction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<double>("AdditionAmount")
                        .HasColumnType("float");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("DeductionAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserNameDelete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameInsert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNameUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("T_SalaryAdditionDeduction");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.StaffSalary", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("AbsentDays")
                        .HasColumnType("int");

                    b.Property<double>("AbsentDaysActual")
                        .HasColumnType("float");

                    b.Property<double>("AbsentDaysActualAmount")
                        .HasColumnType("float");

                    b.Property<int>("AbsentDaysApproval")
                        .HasColumnType("int");

                    b.Property<double>("AbsentHours")
                        .HasColumnType("float");

                    b.Property<double>("AbsentMinutes")
                        .HasColumnType("float");

                    b.Property<double>("AdditionAmount")
                        .HasColumnType("float");

                    b.Property<int>("AdjustedDays")
                        .HasColumnType("int");

                    b.Property<double>("AdvanceAmount")
                        .HasColumnType("float");

                    b.Property<int>("AllowanceAbsent")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<double>("AttendanceAllowanceAmount")
                        .HasColumnType("float");

                    b.Property<bool>("AttendanceExempted")
                        .HasColumnType("bit");

                    b.Property<bool>("CheckAttendanceAllowance")
                        .HasColumnType("bit");

                    b.Property<bool>("CheckIncomeTax")
                        .HasColumnType("bit");

                    b.Property<bool>("CheckOvertime")
                        .HasColumnType("bit");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfJoining")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfResign")
                        .HasColumnType("datetime2");

                    b.Property<double>("DeductionAmount")
                        .HasColumnType("float");

                    b.Property<double>("GrossAmount")
                        .HasColumnType("float");

                    b.Property<double>("IncomeTaxAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("JoinDays")
                        .HasColumnType("int");

                    b.Property<double>("LateDays")
                        .HasColumnType("float");

                    b.Property<double>("LateDaysActual")
                        .HasColumnType("float");

                    b.Property<double>("LateDaysActualAmount")
                        .HasColumnType("float");

                    b.Property<double>("LateDaysTotal")
                        .HasColumnType("float");

                    b.Property<double>("LateHours")
                        .HasColumnType("float");

                    b.Property<double>("LateMinutes")
                        .HasColumnType("float");

                    b.Property<double>("LoanAmount")
                        .HasColumnType("float");

                    b.Property<int>("NoOfDaysMonth")
                        .HasColumnType("int");

                    b.Property<double>("OvertimeActual")
                        .HasColumnType("float");

                    b.Property<double>("OvertimeActualAmount")
                        .HasColumnType("float");

                    b.Property<double>("OvertimeDays")
                        .HasColumnType("float");

                    b.Property<double>("OvertimeHours")
                        .HasColumnType("float");

                    b.Property<double>("OvertimeMinutes")
                        .HasColumnType("float");

                    b.Property<double>("OvertimeRate")
                        .HasColumnType("float");

                    b.Property<double>("PayableAmount")
                        .HasColumnType("float");

                    b.Property<int>("PresentDays")
                        .HasColumnType("int");

                    b.Property<int>("ResignDays")
                        .HasColumnType("int");

                    b.Property<double>("SalaryAllowanceAmount")
                        .HasColumnType("float");

                    b.Property<double>("SalaryAmount")
                        .HasColumnType("float");

                    b.Property<double>("SalaryGrossAmount")
                        .HasColumnType("float");

                    b.Property<double>("SalaryGrossPerDay")
                        .HasColumnType("float");

                    b.Property<double>("SalaryGrossPerHour")
                        .HasColumnType("float");

                    b.Property<double>("SalaryGrossPerMinute")
                        .HasColumnType("float");

                    b.Property<double>("SalaryPerDay")
                        .HasColumnType("float");

                    b.Property<double>("SalaryPerHour")
                        .HasColumnType("float");

                    b.Property<double>("SalaryPerminute")
                        .HasColumnType("float");

                    b.Property<double>("Takaful")
                        .HasColumnType("float");

                    b.Property<int>("TotalAbsentDays")
                        .HasColumnType("int");

                    b.Property<string>("UserNameInsert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNamePost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("VoucherNo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("VoucherPostCk")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("VoucherPostDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkingDays")
                        .HasColumnType("int");

                    b.Property<double>("WorkingHours")
                        .HasColumnType("float");

                    b.HasKey("EmployeeId", "Date");

                    b.ToTable("T_StaffSalary");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.WorkerSalary", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("AbsentDays")
                        .HasColumnType("int");

                    b.Property<double>("AbsentDaysActual")
                        .HasColumnType("float");

                    b.Property<double>("AbsentDaysActualAmount")
                        .HasColumnType("float");

                    b.Property<int>("AbsentDaysApproval")
                        .HasColumnType("int");

                    b.Property<double>("AbsentHours")
                        .HasColumnType("float");

                    b.Property<double>("AbsentMinutes")
                        .HasColumnType("float");

                    b.Property<double>("AdditionAmount")
                        .HasColumnType("float");

                    b.Property<int>("AdjustedDays")
                        .HasColumnType("int");

                    b.Property<double>("AdvanceAmount")
                        .HasColumnType("float");

                    b.Property<int>("AllowanceAbsent")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<double>("AttendanceAllowanceAmount")
                        .HasColumnType("float");

                    b.Property<bool>("AttendanceExempted")
                        .HasColumnType("bit");

                    b.Property<bool>("CheckAttendanceAllowance")
                        .HasColumnType("bit");

                    b.Property<bool>("CheckIncomeTax")
                        .HasColumnType("bit");

                    b.Property<bool>("CheckOvertime")
                        .HasColumnType("bit");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfJoining")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfResign")
                        .HasColumnType("datetime2");

                    b.Property<double>("DeductionAmount")
                        .HasColumnType("float");

                    b.Property<double>("GrossAmount")
                        .HasColumnType("float");

                    b.Property<double>("IncomeTaxAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("JoinDays")
                        .HasColumnType("int");

                    b.Property<double>("LateDays")
                        .HasColumnType("float");

                    b.Property<double>("LateDaysActual")
                        .HasColumnType("float");

                    b.Property<double>("LateDaysActualAmount")
                        .HasColumnType("float");

                    b.Property<double>("LateDaysTotal")
                        .HasColumnType("float");

                    b.Property<double>("LateHours")
                        .HasColumnType("float");

                    b.Property<double>("LateMinutes")
                        .HasColumnType("float");

                    b.Property<double>("LoanAmount")
                        .HasColumnType("float");

                    b.Property<int>("NoOfDaysMonth")
                        .HasColumnType("int");

                    b.Property<double>("OvertimeActual")
                        .HasColumnType("float");

                    b.Property<double>("OvertimeActualAmount")
                        .HasColumnType("float");

                    b.Property<double>("OvertimeDays")
                        .HasColumnType("float");

                    b.Property<double>("OvertimeHours")
                        .HasColumnType("float");

                    b.Property<double>("OvertimeMinutes")
                        .HasColumnType("float");

                    b.Property<double>("OvertimeRate")
                        .HasColumnType("float");

                    b.Property<double>("PayableAmount")
                        .HasColumnType("float");

                    b.Property<int>("PresentDays")
                        .HasColumnType("int");

                    b.Property<int>("ResignDays")
                        .HasColumnType("int");

                    b.Property<double>("SalaryAllowanceAmount")
                        .HasColumnType("float");

                    b.Property<double>("SalaryAmount")
                        .HasColumnType("float");

                    b.Property<double>("SalaryGrossAmount")
                        .HasColumnType("float");

                    b.Property<double>("SalaryGrossPerDay")
                        .HasColumnType("float");

                    b.Property<double>("SalaryGrossPerHour")
                        .HasColumnType("float");

                    b.Property<double>("SalaryGrossPerMinute")
                        .HasColumnType("float");

                    b.Property<double>("SalaryPerDay")
                        .HasColumnType("float");

                    b.Property<double>("SalaryPerHour")
                        .HasColumnType("float");

                    b.Property<double>("SalaryPerminute")
                        .HasColumnType("float");

                    b.Property<double>("Takaful")
                        .HasColumnType("float");

                    b.Property<int>("TotalAbsentDays")
                        .HasColumnType("int");

                    b.Property<string>("UserNameInsert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserNamePost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("VoucherNo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("VoucherPostCk")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("VoucherPostDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkingDays")
                        .HasColumnType("int");

                    b.Property<double>("WorkingHours")
                        .HasColumnType("float");

                    b.HasKey("EmployeeId", "Date");

                    b.ToTable("T_WorkerSalary");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.Absent", b =>
                {
                    b.HasOne("TWP_API_Payroll.Models.Employee", "employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.Advance", b =>
                {
                    b.HasOne("TWP_API_Payroll.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.AnnualLeaveAdjustment", b =>
                {
                    b.HasOne("TWP_API_Payroll.Models.Employee", "employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.AttendanceMachine", b =>
                {
                    b.HasOne("TWP_API_Payroll.Models.AttendanceMachineCategory", "attendanceMachineCategory")
                        .WithMany()
                        .HasForeignKey("AttendanceMachineCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TWP_API_Payroll.Models.AttendanceMachineGroup", "attendanceMachineGroup")
                        .WithMany()
                        .HasForeignKey("AttendanceMachineGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("attendanceMachineCategory");

                    b.Navigation("attendanceMachineGroup");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.CheckAttendance", b =>
                {
                    b.HasOne("TWP_API_Payroll.Models.AttendanceMachine", "attendanceMachineInn")
                        .WithMany()
                        .HasForeignKey("AttendanceMachineIdInn")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TWP_API_Payroll.Models.AttendanceMachine", "attendanceMachineOut")
                        .WithMany()
                        .HasForeignKey("AttendanceMachineIdOut")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TWP_API_Payroll.Models.Employee", "employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("attendanceMachineInn");

                    b.Navigation("attendanceMachineOut");

                    b.Navigation("employee");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.CheckInOut", b =>
                {
                    b.HasOne("TWP_API_Payroll.Models.AttendanceMachine", "attendanceMachine")
                        .WithMany()
                        .HasForeignKey("AttendanceMachineId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TWP_API_Payroll.Models.InOutCategory", "inOutCategory")
                        .WithMany()
                        .HasForeignKey("InOutCategoryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("attendanceMachine");

                    b.Navigation("inOutCategory");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.Employee", b =>
                {
                    b.HasOne("TWP_API_Payroll.Models.AnnualLeaves", "annualLeaves")
                        .WithMany()
                        .HasForeignKey("AnnualLeavesId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TWP_API_Payroll.Models.Department", "department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TWP_API_Payroll.Models.Designation", "designation")
                        .WithMany()
                        .HasForeignKey("DesignationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TWP_API_Payroll.Models.EmployeeCategory", "employeeCategory")
                        .WithMany()
                        .HasForeignKey("EmployeeCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TWP_API_Payroll.Models.Roster", "roster")
                        .WithMany()
                        .HasForeignKey("RosterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("annualLeaves");

                    b.Navigation("department");

                    b.Navigation("designation");

                    b.Navigation("employeeCategory");

                    b.Navigation("roster");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.EmployeeAllowances", b =>
                {
                    b.HasOne("TWP_API_Payroll.Models.Allowance", "allowance")
                        .WithMany()
                        .HasForeignKey("AllowanceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TWP_API_Payroll.Models.Employee", "employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("allowance");

                    b.Navigation("employee");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.EmployeeImage", b =>
                {
                    b.HasOne("TWP_API_Payroll.Models.Employee", "employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.LoanIssue", b =>
                {
                    b.HasOne("TWP_API_Payroll.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TWP_API_Payroll.Models.LoanCategory", "LoanCategory")
                        .WithMany()
                        .HasForeignKey("LoanCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("LoanCategory");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.LoanReceive", b =>
                {
                    b.HasOne("TWP_API_Payroll.Models.LoanIssue", "LoanIssue")
                        .WithMany()
                        .HasForeignKey("LoanIssueId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LoanIssue");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.RosterGroup", b =>
                {
                    b.HasOne("TWP_API_Payroll.Models.Roster", "roster")
                        .WithMany()
                        .HasForeignKey("RosterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("roster");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.Salary", b =>
                {
                    b.HasOne("TWP_API_Payroll.Models.Employee", "employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.SalaryAdditionDeduction", b =>
                {
                    b.HasOne("TWP_API_Payroll.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.StaffSalary", b =>
                {
                    b.HasOne("TWP_API_Payroll.Models.Employee", "employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("TWP_API_Payroll.Models.WorkerSalary", b =>
                {
                    b.HasOne("TWP_API_Payroll.Models.Employee", "employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("employee");
                });
#pragma warning restore 612, 618
        }
    }
}
